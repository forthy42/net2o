#! /usr/bin/env gforth
\ -*- mode: Forth -*-

require net2o.fs
require net2o-vault.fs

: del-last-key ( -- )
    keys $[]# 1- keys $[] sec-off
    keys $@len cell- keys $!len ;

: choose-key ( -- o )
    0 BEGIN  drop
	." Choose nick:" cr .secret-nicks
	key '0' - 0 max secret-key dup
    UNTIL ;

\ will ask for your password and if possible auto-select your id

: get-me ( -- )  read-keys secret-keys#
    BEGIN  dup 0= WHILE drop
	    ." Enter your net2o passphrase: " +passphrase
	    read-keys secret-keys# dup 0= IF
		."  wrong passphrase, no key found" del-last-key
	    THEN  cr
    REPEAT
    1 = IF  0 secret-key  ELSE  choose-key  THEN  >raw-key ;

Variable key-readin

: out-me ( -- )
    pkc keysize key-table #@ 0= !!unknown-key!!
    cell+ >o pack-pubkey ke-nick $@ o>
    [: type ." .n2o" ;] $tmp w/o create-file throw
    >r keypack-buf cmdbuf# @ r@ write-file throw r> close-file throw ;

Variable key-list

: pk-off ( -- ) key-list $[]off ;
: +pk ( "name" -- )  pk' keysize umin key-list $+[]! ;
: args>keylist ( -- )
    BEGIN argc @ 1 >  WHILE
	    next-arg nick-key
	    ?dup-IF  >o ke-pk $@ o> keysize umin key-list $+[]!  THEN
    REPEAT ;

\ commands for the command line user interface

Vocabulary net2o-cmds

get-current also net2o-cmds definitions

: keyin ( -- )
    \G usage: n2o keyin file
    get-me keys key>default
    next-arg key-readin $slurp-file
    key-readin $@ do-key
    save-pubkeys ;
: keyout ( -- )
    \G usage: n2o keyout
    get-me out-me ;
: keygen ( -- )
    \G usage: n2o keygen nick
    +newphrase key>default
    next-arg 2dup key#user +gen-keys .rsk
    read-keys .keys out-me ;
: keylist ( -- )
    \G usage: n2o keylist
    get-me
    key-table [: cell+ $@ drop cell+ >o
	info-color attr! ke-pk $@ keysize umin 85type space
	default-color attr! ke-nick $@ type cr o> ;] #map ;

\ define key lists

: enc ( -- )
    \G usage: n2o enc file user1 .. usern
    next-arg 2>r get-me args>keylist
    2r> key-list encrypt-file ;
: enc3 ( -- )
    \G usage: n2o enc3 file user1 .. usern; threefish keywrapping
    next-arg 2>r get-me args>keylist
    2r> key-list enc-threefish encrypt-file ;
: dec ( -- )
    \G usage: n2o dec file
    next-arg 2>r get-me 2r> decrypt-file ;
: cat ( -- )
    \G usage: n2o cat file
    vault>out dec ;

: help ( -- )
    next-arg "cmd" replaces
    [ loadfilename 2@ ] 2Literal "0" replaces
    "grep \"\\G u[s]age: n2o %cmd%\" %0% | sed -e 's/ *\\\\G u[s]age: //g'"
    $substitute drop system ;

set-current

: do-net2o-cmd ( -- )
    next-arg ['] net2o-cmds >body search-wordlist
    IF  execute  ELSE  help  THEN ;

previous

script? [IF]  do-net2o-cmd bye  [THEN]