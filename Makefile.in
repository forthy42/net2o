# Gforth integration Makefile

# Copyright (C) 2015   Bernd Paysan

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

package = $(DESTDIR)
VPATH = @srcdir@:.
prefix = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
datadir   = $(package)@datadir@
srcdir    = @srcdir@
bindir    = $(package)@bindir@
libdir = $(package)@libdir@
LIBCCDEST = $(libdir)/gforth/$(VERSION)/$(machine)/libcc-named/
libccdir = $(subst $(package),,$(LIBCCDEST))
LIBS 	 = keccak threefish ed25519-donna bdelta
MKDIR	 = mkdir
GCC	 = gcc
LIBTOOL	 = @GNU_LIBTOOL@
CFLAGS	 = -O3 -fomit-frame-pointer
HOST     = 
FAST     = @FAST@
FORTHLIB = ed25519-donna.fs keccak.fs threefish.fs bdelta.fs
ifeq "$(FAST)" "yes"
FORTHLIB += ed25519-donnafast.fs keccakfast.fs threefishfast.fs
endif
SRC      = .
ENGINE   = @GFORTH@
GFORTH   = $(basename $(ENGINE))
VERSION  = @GFVER@
machine  = @GFARCH@
LIBCCNAMED = lib/$(notdir $(GFORTH))/$(VERSION)/$(machine)/libcc-named/
PREFIX    = $(package)@prefix@
INCDIR    = $(PREFIX)/include/$(VERSION)
INSTALL	= @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
ARCH	  =
DEBARCH   =

TESTS = tests/alice2-msg.fs tests/alice-msg.fs tests/bob-msg.fs		\
	  tests/copy.fs tests/cryptspeed.fs tests/dht.fs		\
	  tests/dht-pop.fs tests/ed25519.fs tests/insdeltest.fs		\
	  tests/keccak.fs tests/keys.fs tests/msg.fs			\
	  tests/teststat.fs tests/threefish.fs tests/vault.fs		\
	  tests/ed25519-table.fs tests/alice-test.fs			\
	  tests/bob-test.fs tests/eve-test.fs tests/client-test.fs	\
	  tests/client-tests.fs tests/server-test.fs			\
	  tests/terminal-test.fs tests/test-keys.fs

SOURCES = 64bit.fs base64.fs base85.fs config.fs crypto-api.fs		\
	  debugging.fs hash-table.fs keccak-small.fs kregion.fs		\
	  n2o.fs net2o-addr.fs net2o-classes.fs net2o-cmd.fs		\
	  net2o-connected.fs net2o-connect.fs net2o-crypt.fs		\
	  net2o-dht.fs net2o-err.fs net2o-file.fs net2o.fs		\
	  net2o-ip.fs net2o-helper.fs net2o-keys.fs net2o-log.fs	\
	  net2o-msg.fs net2o-notify.fs net2o-qr.fs net2o-socks.fs	\
	  net2o-tools.fs net2o-vault.fs rng.fs termclient.fs xtype.fs	\
	  $(TESTS) $(FORTHLIB) ed25519-donnalib.fs keccaklib.fs		\
	  threefishlib.fs startn2o.fs doc/net2o-logo.png		\
	  net2o-version.fs.in android/net.fs android/notify.fs		\
	  linux/net.fs linux/notify.fs net2o-dhtroot.fs net2o-dvcs.fs	\
	  android/qrscan.fs

SRCDIRS = net2o-@PACKAGE_VERSION@/tests net2o-@PACKAGE_VERSION@/doc net2o-@PACKAGE_VERSION@/android net2o-@PACKAGE_VERSION@/linux

SCRIPTS = n2o

GEN = net2o-version.fs

DOC = wiki/commands.md

all: no-config TAGS

no-config: libs $(GEN)

clean:
	for i in $(LIBS); do (cd $$i; $(MAKE) clean); done

configs:
	for i in $(LIBS); do (cd $$i; ./autogen.sh CFLAGS="$(subst O2,O3,$(CFLAGS))" --host=$(HOST) --prefix=$(PREFIX) && $(MAKE) clean); done

libs:
	for i in $(LIBS); do (cd $$i; $(MAKE)); done

install-libs:
	for i in $(LIBS); do (cd $$i; $(MAKE) package=$(package) install); done

extra-install:	install-libs install

install:	libcc-install
	for i in $(SRCDIRS); do \
		$(MKDIR) -p $(datadir)/gforth/$(VERSION)/$$i; \
	done
	for i in $(SOURCES) $(GEN); do \
		$(INSTALL_DATA) ./$$i $(datadir)/gforth/$(VERSION)/net2o-@PACKAGE_VERSION@/$$i; \
	done
	ln -fs net2o-@PACKAGE_VERSION@ $(datadir)/gforth/$(VERSION)/net2o
	$(MKDIR) -p $(bindir)
	for i in $(SCRIPTS); do \
		$(INSTALL_SCRIPT) ./$$i $(bindir)/$$i-@PACKAGE_VERSION@; \
		ln -fs $$i-@PACKAGE_VERSION@ $(bindir)/$$i; \
	done

libcc:	$(FORTHLIB)
	-for i in $(FORTHLIB); do \
		echo "generating library $$i"; \
		$(ENGINE) -e "also c-lib s\" $(LIBCCNAMED)\" >libcc-named-dir libcc-path clear-path libcc-named-dir libcc-path also-path :noname 2drop s\" $(libccdir)\" ; is replace-rpath previous" $$i -e bye; \
	done

libcc-install:	libcc
	$(MKDIR) -p $(LIBCCDEST)
	if test -n "$(LIBTOOL)"; then for i in $(subst -,_,$(FORTHLIB)); do \
		   $(LIBTOOL) --silent --mode=install $(INSTALL) $(LIBCCNAMED)/libgf`basename $$i .fs`.la $(LIBCCDEST)libgf`basename $$i .fs`.la; \
		done; fi

doc:	$(DOC)

wiki/commands.md:	$(SOURCES)
	gforth -e ': docgen ;' n2o.fs -e bye >wiki/commands.md

TAGS:	$(SOURCES) $(GEN)
	gforth etags.fs n2o.fs -e "bye" || >TAGS
	mv TAGS net2o.TAGS
	cat `gforth -e '"TAGS" open-fpath-file throw type bye'` net2o.TAGS >TAGS

configure: configure.ac
	cd $(srcdir) && autoreconf --force --verbose $(srcdir)

Makefile n2o net2o-version.fs debian/changelog debian/control:	Makefile.in n2o.in config.status
	./config.status

config.status: configure
	./config.status --recheck

debdist:
	dpkg-buildpackage -d -b $(DEBARCH)

debdist32:
	GFORTH=gforth-386 CC="gcc -m32" dpkg-buildpackage -d -b -ai386
